{
  "Comment": "State machine to run a single ETL run group",
  "StartAt": "Init",
  "States": {
    "Init": {
      "Comment": "Initialize the run map.",
      "Type": "Task",
      "Resource": "${create_etl_run_map_arn}",
      "Parameters": {
        "s3bucket": "managed-data-assets-dev",
        "rungroup": "daily"
      },
      "ResultPath": "$",
      "Next": "Check200"
    },
    "Check200": {
      "Comment": "Make sure there wasn't an error return from the lambda",
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.statusCode",
          "NumericEquals": 200,
          "Next": "IsGo"
        }
      ],
      "Default": "Failed",
      "OutputPath": "$.body"
    },
    "IsGo": {
      "Comment": "Check whether there are more parallel sets to do",
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.go",
          "BooleanEquals": true,
          "Next": "ProcessParallelSet"
        }
      ],
      "Default": "Done"
    },
    "UpdateRunMap": {
      "Comment": "Update the run map.",
      "Type": "Task",
      "Resource": "${update_etl_run_map_arn}",
      "Parameters": {
        "state.$": "$"
      },
      "ResultPath": "$",
      "Next": "Check200"
    },
    "Failed": {
      "Type": "Fail",
      "Cause": "Not Hello World"
    },
    "Done": {
      "Type": "Succeed"
    },
    "ProcessParallelSet": {
      "Comment": "Process a set of independent assets in parallel",
      "Type": "Map",
      "MaxConcurrency": 1,
      "InputPath": "$",
      "ItemsPath": "$.next",
      "Parameters": {
        "ETLJobIndex.$": "$$.Map.Item.Index",
        "ETLJob.$": "$$.Map.Item.Value",
        "JobIndex": 0,
        "JobGo": true
      },
      "Next": "UpdateRunMap",
      "ResultPath": "$.results",
      "Iterator": {
        "StartAt": "ProcessOneAsset",
        "States": {
          "ProcessOneAsset": {
            "Comment": "Loop through tasks associated with one asset",
            "Type": "Choice",
            "Choices": [
              {
                "Variable": "$.JobGo",
                "BooleanEquals": true,
                "Next": "SetupTask"
              }
            ],
            "Default": "TasksDone"
          },
          "SetupTask": {
            "Comment": "Set up the next task.",
            "Type": "Task",
            "Resource": "${setup_task_arn}",
            "ResultPath": "$",
            "OutputPath": "$.result",
            "Next": "DoOneTask"
          },
          "DoOneTask": {
            "Type": "Choice",
            "Choices": [
              {
                "Variable": "$.JobType",
                "StringEquals": "noop",
                "Next": "NoopTask"
              }
            ],
            "Default": "UnknownTask"
          },
          "NoopTask": {
            "Comment": "Actively do nothing.",
            "Type": "Task",
            "Resource": "${etl_task_noop_arn}",
            "ResultPath": "$.TaskOutput",
            "Next": "CheckTaskStatus"
          },
          "UnknownTask": {
            "Comment": "Unknown task type.",
            "Type": "Task",
            "Resource": "${etl_task_unknown_arn}",
            "ResultPath": "$.TaskOutput",
            "Next": "CheckTaskStatus"
          },
          "CheckTaskStatus": {
            "Comment": "Check the status of the last task.",
            "Type": "Task",
            "Resource": "${check_task_status_arn}",
            "Parameters": {
              "input.$": "$"
            },
            "ResultPath": "$",
            "OutputPath": "$.body",
            "Next": "ProcessOneAsset"
          }, 
          "TasksDone": {
            "Type": "Pass",
            "End": true,
            "ResultPath": "$.results"      
          }
        }
      }
    }
  }
}

  